#!/usr/bin/env bash

BASEDIR=basedir
BASH=bash
EMACS=emacs
JQ=jq
DMENU=dmenu
SOCAT=socat
EPASS=$BASEDIR/bin/epass
XDOTOOL=xdotool
HEAD=head
SED=sed

load() {
    $EMACS -Q --batch --load $BASEDIR/share/em'acs'/site-lisp/epass-json.el --eval '(epass-file-princ-json "~/.passwords")'  2>/dev/null |
        $JQ -c -r 'select('"$1"')'
}

choose() {
    LINE=$(echo -E "$1" | $JQ -r -c .name | $DMENU -i -1 -p "${2:-select}: " -l 10)
    if [ ! -z "$LINE" ]; then
        echo -E "$1" | $SED "${LINE}q;d"
    else
        return 1
    fi
}

ask() {
    X=$(echo -e "yes\nno" | dmenu -p "$1")
    if [ "$X" = "yes" ]; then
        return 0
    else
        return 1
    fi
}

copyonce() {
    echo "$1" | xclip -l 1 -quiet
}

case $1 in
    type)
        case $2 in
            user)
                choose "$(load .USERNAME)" "$1 $2" | $JQ -r .USERNAME | $XDOTOOL type --clearmodifiers --file -
                ;;
            password)
                choose "$(load .PASSWORD)" "$1 $2" | $JQ -r .PASSWORD | $XDOTOOL type --clearmodifiers --file -
                ;;
            *)
                DATA=$(choose "$(load '.USERNAME and .PASSWORD')" "$1")
                echo "$DATA" | $JQ -r .USERNAME | $XDOTOOL type --clearmodifiers --file -
                $XDOTOOL type --clearmodifiers "	"
                echo "$DATA" | $JQ -r .PASSWORD | $XDOTOOL type --clearmodifiers --file -
                ;;
        esac
        ;;
    visit)
        U=$(choose "$(load .URL)" "$1" | $JQ -r .URL)
        [ ! -z "$U" ] && xdg-open "$U"
        ;;
    list)
        load . | $JQ -r .name
        ;;
    echo)
        shift
        output=$1
        shift
        jrule="true"
        while (( "$#" )); do
            if [ ! -z "$jrule" ] ; then
                jrule="$jrule and "
            fi

            jrule="$jrule.${1^^} == \"$2\""
            shift
            shift
        done
        load "$jrule" | $HEAD -n 1 | $JQ -r ".${output^^}"
        ;;
    serve-credentials)
        PIDF=$HOME/.passwords/run/pid
        case $2 in
            start)
                SOCKET="$HOME/.passwords/run/socket"

                if [ ! -S "$SOCKET" ]; then
                    $SOCAT UNIX-LISTEN:"$SOCKET",fork,reuseaddr EXEC:"$EPASS _serve-credentials" &
                    PID=$!
                    echo "$PID" > "$PIDF"
                    wait $PID
                fi
                ;;
            stop)
                if [ -f "$PIDF" ]; then
                    kill -- "$(cat $PIDF)"
                    rm -rf -- "$PIDF"
                fi
                ;;
        esac
        ;;
    _serve-credentials)
        while read command server share; do
            case $command in
                write-credentials)
                    echo "served $server $share" 1>&2
                    cf="$HOME/.passwords/run/$server-$share.credentials"
                    load ".MACHINE == \"$server\" and .SHARE == \"$share\"" \
                        | $HEAD -n 1  \
                        | $JQ -r '"username=" + .USERNAME + "\npassword=" + .PASSWORD + "\ndomain=" + .DOMAIN + "\n"' > "$cf"
                    ;;
            esac
        done
        ;;
    -h)
        echo "list | type [user | password | both] | visit | echo password [key value]*"
        ;;
    *)
        DATA=$(choose "$(load .)" "select")
        URL=$(echo "$DATA" | $JQ -r .URL)
        [ ! -z "$URL" ] && ask "visit $URL?" && xdg-open "$URL" &

        USER=$(echo "$DATA" | $JQ -r .USERNAME)
        [ ! -z "$USER" ] && ask "copy username?" && copyonce "$USER"

        PASS=$(echo "$DATA" | $JQ -r .PASSWORD)
        [ ! -z "$USER" ] && ask "copy password?" && copyonce "$PASS"
        ;;
esac
